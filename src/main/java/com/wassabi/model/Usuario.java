package com.wassabi.model;
// Generated 5 de nov. de 2022 21:01:28 by Hibernate Tools 4.3.6.Final

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import com.wassabi.criptografia.PasswordStorage;
import com.wassabi.criptografia.PasswordStorage.CannotPerformOperationException;

/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name = "Usuario", catalog = "wassabi", uniqueConstraints = { @UniqueConstraint(columnNames = "usuario_cliente"),
		@UniqueConstraint(columnNames = "usuario_email") })
public class Usuario implements java.io.Serializable {

	private Integer usuarioId;
	private Cliente cliente;
	private String usuarioEmail;
	private String usuarioSenha;
	private String usuarioTipo;

	public Usuario() {
	}

	public Usuario(String usuarioEmail, String usuarioSenha, String usuarioTipo) {
		this.usuarioEmail = usuarioEmail;
		this.usuarioSenha = usuarioSenha;
		this.usuarioTipo = usuarioTipo;
	}

	public Usuario(Cliente cliente, String usuarioEmail, String usuarioSenha, String usuarioTipo) {
		this.cliente = cliente;
		this.usuarioEmail = usuarioEmail;
		this.usuarioSenha = usuarioSenha;
		this.usuarioTipo = usuarioTipo;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "usuario_id", unique = true, nullable = false)
	public Integer getUsuarioId() {
		return this.usuarioId;
	}

	public void setUsuarioId(Integer usuarioId) {
		this.usuarioId = usuarioId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "usuario_cliente", unique = true)
	public Cliente getCliente() {
		return this.cliente;
	}

	public void setCliente(Cliente cliente) {
		this.cliente = cliente;
	}

	@Column(name = "usuario_email", unique = true, nullable = false, length = 40)
	public String getUsuarioEmail() {
		return this.usuarioEmail;
	}

	public void setUsuarioEmail(String usuarioEmail) {
		this.usuarioEmail = usuarioEmail;
	}

	@Column(name = "usuario_senha", nullable = false, length = 71)
	public String getUsuarioSenha() {
		return this.usuarioSenha;
	}

	public void setUsuarioSenha(String usuarioSenha) {
		try {
            this.usuarioSenha = PasswordStorage.createHash(usuarioSenha);
        } catch (CannotPerformOperationException e) {
            e.printStackTrace();
        }
	}

	@Column(name = "usuario_tipo", nullable = false, length = 13)
	public String getUsuarioTipo() {
		return this.usuarioTipo;
	}

	public void setUsuarioTipo(String usuarioTipo) {
		this.usuarioTipo = usuarioTipo;
	}

    @Override
    public String toString() {
        return "Usuario [usuarioId=" + usuarioId + ", usuarioEmail=" + usuarioEmail + ", usuarioSenha=" + usuarioSenha
                + ", usuarioTipo=" + usuarioTipo + "]";
    }

}
